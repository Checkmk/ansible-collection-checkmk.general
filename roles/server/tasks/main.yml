---
- name: "Preflight - Fail if target host is not stable for this Role."
  ansible.builtin.fail:
    msg: "This role is not stable for the target operating system, {{ ansible_distribution }} {{ ansible_distribution_major_version }}."
  when: (ansible_distribution is not defined) or
        (ansible_distribution_version is not defined) or
        (ansible_distribution + "-" + ansible_distribution_major_version not in checkmk_server_server_stable_os)

- name: "Preflight - Fail if Checkmk Edition is incorrect."
  ansible.builtin.fail:
    msg: "The provided Checkmk Edition '{{ checkmk_server_edition | lower }}' does  not exist or is not supported by this role."
  when: checkmk_server_edition | lower not in __checkmk_server_edition_mapping

- name: "Include OS Family specific Variables."
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - include-os-family-vars
    - install-package

- name: "Get installed Packages."
  ansible.builtin.package_facts:

- name: "Update APT Cache."
  become: true
  ansible.builtin.apt:
    update_cache: true
  when: ansible_os_family == "Debian"

- name: "Install Checkmk Prerequisites."
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ __checkmk_server_prerequisites }}"
  tags:
    - install-package
    - install-prerequisites

- name: "Downloads Management."
  when: not 'check-mk-' + __checkmk_server_edition_mapping[checkmk_server_edition] + '-' +checkmk_server_version in ansible_facts.packages
  block:

    - name: "Download Checkmk Server Setup."
      ansible.builtin.get_url:
        url: "{{ checkmk_server_download_url }}"
        dest: "/tmp/{{ __checkmk_server_setup_file }}"
        mode: "0640"
        url_username: "{{ checkmk_server_download_user | default(omit) }}"
        url_password: "{{ checkmk_server_download_pass | default(omit) }}"
      retries: 3
      tags:
        - download-package

    - name: "Download Checkmk GPG Key."
      ansible.builtin.get_url:
        url: "https://download.checkmk.com/checkmk/Check_MK-pubkey.gpg"
        dest: "/tmp/Check_MK-pubkey.gpg"
        mode: "0640"
      when: checkmk_server_verify_setup | bool
      retries: 3
      tags:
        - download-gpg-key

    - name: "GPG Verification on Debian Derivatives."
      when: checkmk_server_verify_setup | bool and ansible_os_family == "Debian"
      block:
        - name: "Import Checkmk GPG Key."
          ansible.builtin.command: "gpg --import /tmp/Check_MK-pubkey.gpg"
          register: __checkmk_server_gpg_import
          when: checkmk_server_verify_setup | bool
          changed_when: "'imported: 1' in __checkmk_server_gpg_import"
          tags:
            - import-gpg-key

        - name: "Verify Checkmk Setup."
          ansible.builtin.command: gpg --verify "/tmp/{{ __checkmk_server_setup_file }}"
          register: __checkmk_server_verify_state
          changed_when: false
          failed_when: "'Bad signature' in __checkmk_server_verify_state.stderr"

    - name: "Import Checkmk GPG Key."
      become: true
      ansible.builtin.rpm_key:
        key: "/tmp/Check_MK-pubkey.gpg"
        state: present
      when: checkmk_server_verify_setup | bool and ansible_os_family == "RedHat"
      tags:
        - import-gpg-key

- name: Include OS Family specific Playbook.
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Include Site Management Playbook.
  ansible.builtin.include_tasks: "sites.yml"
  when: checkmk_server_sites is defined

- name: "Cleanup unused Checkmk Versions."
  become: true
  ansible.builtin.shell: |
    set -o pipefail
    omd cleanup
  args:
    executable: /bin/bash
  changed_when: "'Uninstalling' in __checkmk_server_cleanup_state.stdout"
  register: __checkmk_server_cleanup_state
  when: checkmk_server_cleanup | bool
  tags:
    - cleanup

- name: "Flush Handlers."
  ansible.builtin.meta:
    flush_handlers
