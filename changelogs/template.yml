###########################################################
#                                                         #
# Please use this template when writing changelogs.       #
# Remove all comment lines, once you added your changes.  #
# Refer to the archive, if you need examples.             #
#                                                         #
###########################################################

# How to create a changelog:
# https://docs.ansible.com/ansible/latest/community/development_process.html#changelogs-how-to

# Documentation of the file format:
# https://github.com/ansible-community/antsibull-changelog/blob/main/docs/changelog.yaml-format.md

# Quick reference:
## Line Format:
# When writing a changelog entry, use the following format:
# - scope - description starting with a uppercase letter and ending with a period at the very end. Multiple sentences are allowed.
# The scope is usually a module or plugin name or group of modules or plugins, for example, "lookup plugins", "agent role" or "host lookup module".
# While module names can (and should) be mentioned directly (foo_module), plugin names should always be followed by the type (foo inventory plugin).
# For changes that are not really scoped (for example, which affect a whole collection), use the following format:
# - Description starting with an uppercase letter and ending with a dot at the very end. Multiple sentences are allowed.

# Tipps:
# You can write multi line changelogs like this:
# - Module name - This is a very long and detailed
#   changelog line, so we will split it into several
#   lines, just like this.
#
# Inline code blocks can be written as follows:
# - my module - fix crash caused by ``cache.update()`` raising an ``IOError``

## Possible keys:
#
# release_summary
#     Adds a single line release summary to the changelog.
# breaking_changes
#     Changes that break existing playbooks or roles.
#     This includes any change to existing behavior that forces users to update tasks.
#     Displayed in both the changelogs and the Porting Guides.
# major_changes
#     Major changes to Ansible itself. Generally does not include module or plugin changes. Displayed in both the changelogs and the Porting Guides.
# minor_changes
#     Minor changes to Ansible, modules, or plugins. This includes new features, new parameters added to modules, or behavior changes to existing parameters.
# deprecated_features
#     Features that have been deprecated and are scheduled for removal in a future release. Displayed in both the changelogs and the Porting Guides.
# removed_features
#     Features that were previously deprecated and are now removed. Displayed in both the changelogs and the Porting Guides.
# security_fixes
#     Fixes that address CVEs or resolve security concerns. Include links to CVE information.
# bugfixes
#     Fixes that resolve issues.
# known_issues
#     Known issues that are currently not fixed or will not be fixed.
