---
# Take this from playbooks/test-full.yml to ensure full coverage!
# Be sure to remove header!

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Set customer when needed."
  ansible.builtin.set_fact:
    customer: "provider"
  when: outer_item.edition == "cme"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Unset customer when needed."
  ansible.builtin.set_fact:
    customer: null
  when: outer_item.edition != "cme"


- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create folders."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ item.path }}"
    name: "{{ item.name }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_folders }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete folders."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ item.path }}"
    name: "{{ item.name }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_folders }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create folders for attributes test."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    name: "{{ checkmk_var_folder_attr_test.name }}"
    attributes: "{{ checkmk_var_folder_attr_test.attributes }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update folder attributes without specifying title (name)."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    state: "present"
    update_attributes:
      tag_criticality: "test"
      tag_networking: "wan"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Check the idempotency of Update attributes."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    update_attributes:
      tag_criticality: "test"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_update_attributes
  failed_when: __checkmk_var_result_update_attributes.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update folder title (name)."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    name: "{{ checkmk_var_folder_attr_test.name }} Modified"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Remove folder attributes without specifying title (name)."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    state: "present"
    remove_attributes:
      - "tag_networking"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Check the idempotency of Remove attributes."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ checkmk_var_folder_attr_test.path }}"
    remove_attributes:
      - "tag_networking"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_remove_attributes
  failed_when: __checkmk_var_result_remove_attributes.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete folders."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ item.path }}"
    name: "{{ item.name }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_folders }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create folders for defaults test."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ item.path }}"
    name: "{{ item.name | default(omit) }}"
    state: "present"
  loop: "{{ checkmk_var_folders_defaults_test }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Print created folders."
  ansible.builtin.debug:
    var: __checkmk_var_folder_title
  vars:
    __checkmk_var_result_print: "{{ lookup('checkmk.general.folders',
                    '~',
                    server_url=checkmk_var_server_url,
                    site=outer_item.site,
                    validate_certs=False,
                    automation_user=checkmk_var_automation_user,
                    automation_secret=checkmk_var_automation_secret)
              }}"
    __checkmk_var_folder_title: "{{ dict((__checkmk_var_result_print | map(attribute='id') | map('regex_replace', '~', '/')) | zip(__checkmk_var_result_print | map(attribute='title'))) }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify created folders."
  ansible.builtin.assert:
    that: "__checkmk_var_folder_title[item.path | regex_replace('~', '/') ] == item.verify_name"
  vars:
    __checkmk_var_result_verify: "{{ lookup('checkmk.general.folders',
                    '~',
                    server_url=checkmk_var_server_url,
                    site=outer_item.site,
                    validate_certs=False,
                    automation_user=checkmk_var_automation_user,
                    automation_secret=checkmk_var_automation_secret)
              }}"
    __checkmk_var_folder_title: "{{ dict((__checkmk_var_result_verify | map(attribute='id') | map('regex_replace', '~', '/')) | zip(__checkmk_var_result_verify | map(attribute='title'))) }}"
  loop: "{{ checkmk_var_folders_defaults_test }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete folders."
  folder:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    path: "{{ item.path }}"
    name: "{{ item.name | default(omit) }}"
    state: "absent"
  loop: "{{ checkmk_var_folders_defaults_test }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
