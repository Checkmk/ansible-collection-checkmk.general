---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create auxiliary tag."
  checkmk.general.aux_tag:
    server_url: "{{ server_url }}"
    site: "{{ site }}"
    automation_user: "{{ automation_user }}"
    automation_secret: "{{ automation_secret }}"
    name: "test_aux_tag"
    title: "Test Auxiliary Tag"
    topic: "Testing"
    help: "An auxiliary tag for testing purposes"
    state: "present"
  register: aux_tag_create
  failed_when: aux_tag_create.failed

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify aux tag created."
  ansible.builtin.assert:
    that:
      - aux_tag_create.changed is true
      - aux_tag_create.http_code == 200 or aux_tag_create.http_code == 204
    fail_msg: "Auxiliary tag was not created successfully!"
    success_msg: "Auxiliary tag created successfully."

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create auxiliary tag again (idempotency)."
  checkmk.general.aux_tag:
    server_url: "{{ server_url }}"
    site: "{{ site }}"
    automation_user: "{{ automation_user }}"
    automation_secret: "{{ automation_secret }}"
    name: "test_aux_tag"
    title: "Test Auxiliary Tag"
    topic: "Testing"
    help: "An auxiliary tag for testing purposes"
    state: "present"
  register: aux_tag_create_again
  failed_when: aux_tag_create_again.failed

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify idempotency."
  ansible.builtin.assert:
    that:
      - aux_tag_create_again.changed is false
    fail_msg: "Auxiliary tag should not have changed!"
    success_msg: "Idempotency verified."

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update auxiliary tag."
  checkmk.general.aux_tag:
    server_url: "{{ server_url }}"
    site: "{{ site }}"
    automation_user: "{{ automation_user }}"
    automation_secret: "{{ automation_secret }}"
    name: "test_aux_tag"
    title: "Updated Test Auxiliary Tag"
    topic: "Testing"
    help: "An updated auxiliary tag for testing purposes"
    state: "present"
  register: aux_tag_update
  failed_when: aux_tag_update.failed

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify aux tag updated."
  ansible.builtin.assert:
    that:
      - aux_tag_update.changed is true
      - aux_tag_update.http_code == 200 or aux_tag_update.http_code == 204
    fail_msg: "Auxiliary tag was not updated successfully!"
    success_msg: "Auxiliary tag updated successfully."

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete auxiliary tag."
  checkmk.general.aux_tag:
    server_url: "{{ server_url }}"
    site: "{{ site }}"
    automation_user: "{{ automation_user }}"
    automation_secret: "{{ automation_secret }}"
    name: "test_aux_tag"
    state: "absent"
  register: aux_tag_delete
  failed_when: aux_tag_delete.failed

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify aux tag deleted."
  ansible.builtin.assert:
    that:
      - aux_tag_delete.changed is true
      - aux_tag_delete.http_code == 204 or aux_tag_delete.http_code == 200
    fail_msg: "Auxiliary tag was not deleted successfully!"
    success_msg: "Auxiliary tag deleted successfully."

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete auxiliary tag again (idempotency)."
  checkmk.general.aux_tag:
    server_url: "{{ server_url }}"
    site: "{{ site }}"
    automation_user: "{{ automation_user }}"
    automation_secret: "{{ automation_secret }}"
    name: "test_aux_tag"
    state: "absent"
  register: aux_tag_delete_again
  failed_when: aux_tag_delete_again.failed

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify deletion idempotency."
  ansible.builtin.assert:
    that:
      - aux_tag_delete_again.changed is false
    fail_msg: "Auxiliary tag should not have changed!"
    success_msg: "Deletion idempotency verified."
