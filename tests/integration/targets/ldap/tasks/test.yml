---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Set customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: "provider"
  when: (outer_item.edition == "cme") or (outer_item.edition == "cce")

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Unset customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: null
  when: not ((outer_item.edition == "cme") or (outer_item.edition == "cce"))

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create an LDAP connection."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config: "{{ item.ldap_config }}"
    state: "present"
  delegate_to: localhost
  loop: "{{ checkmk_var_ldap_connections }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create an LDAP connection. Again."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config: "{{ item.ldap_config }}"
    state: "present"
  delegate_to: localhost
  loop: "{{ checkmk_var_ldap_connections }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_create
  failed_when: __checkmk_var_result_create.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Lookup an LDAP connection."
  ansible.builtin.set_fact:
    checkmk_var_ldap_connection: "{{ extensions }}"
  vars:
    extensions: "{{
                    lookup('checkmk.general.checkmk_var_ldap_connection',
                        checkmk_var_ldap_connections[0].ldap_config.general_properties.id,
                        server_url=checkmk_var_server_url,
                        site=outer_item.site,
                        automation_user=checkmk_var_automation_user,
                        automation_secret=checkmk_var_automation_secret,
                        validate_certs=False
                        )
                 }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Debug."
  ansible.builtin.debug:
    msg: "LDAP connection: {{ checkmk_var_ldap_connection }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update LDAP connections."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config: "{{ item.extenstions | combine(comment_update, recursive=true) }}"
    state: "present"
  vars:
    comment_update:
      general_properties:
        comment: New comment
  delegate_to: localhost
  loop: "{{ lookup('checkmk.general.checkmk_var_ldap_connection',
                        checkmk_var_ldap_connections[0].ldap_config.general_properties.id,
                        server_url=checkmk_var_server_url,
                        site=outer_item.site,
                        automation_user=checkmk_var_automation_user,
                        automation_secret=checkmk_var_automation_secret,
                        validate_certs=False
                        )
                 }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update LDAP connections. Again."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config: "{{ item.ldap_config }}"
    state: "present"
  delegate_to: localhost
  loop: "{{ checkmk_var_ldap_connections_update }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_update
  failed_when: __checkmk_var_result_update.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete LDAP connection."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config:
      general_properties:
        id: "{{ item.ldap_config.general_properties.id }}"
    state: "absent"
  delegate_to: localhost
  loop: "{{ checkmk_var_ldap_connections }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete LDAP connection. Again."
  ldap:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ldap_config:
      general_properties:
        id: "{{ item.ldap_config.general_properties.id }}"
    state: "absent"
  delegate_to: localhost
  loop: "{{ checkmk_var_ldap_connections }}"
  loop_control:
    label: "{{ item.ldap_config.general_properties.id }}"
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_delete
  failed_when: __checkmk_var_result_delete.changed | bool
