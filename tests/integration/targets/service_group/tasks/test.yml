---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Set customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: "provider"
  when: outer_item.edition == "cme"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Unset customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: null
  when: outer_item.edition != "cme"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create service groups."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    name: "{{ item.name }}"
    title: "{{ item.title | default(item.name) }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_service_groups_create }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Test for mutually exclusive module args: 'groups|name'."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    name: "{{ item.name }}"
    title: "{{ item.title | default(item.name) }}"
    groups: checkmk_var_service_groups_create
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_service_groups_create }}"
  register: __checkmk_var_result_mutex_loop
  failed_when: "'parameters are mutually exclusive: groups|name' not in __checkmk_var_result_mutex_loop.msg"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Modify part of service groups (also checks for idempotency!)."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    name: "{{ item.name | default(item.name) }}"
    title: "{{ item.title }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_service_groups_modify }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete service groups."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    name: "{{ item.name }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_service_groups_delete }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete service groups that were created at the beginning (also check for idempotency)."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    name: "{{ item.name }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_service_groups_create }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Bulk create service groups."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_create }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Test for mutually exclusive module args: 'groups|name'."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_create }}"
    name: "test"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_mutex_single
  failed_when: "'parameters are mutually exclusive: groups|name' not in __checkmk_var_result_mutex_single.msg"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Test for uneffective module args: 'groups' and 'title'."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_create }}"
    title: "Test"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: __checkmk_var_result_ineffective
  failed_when: |
    "'title' has only effect when 'name' is defined and not 'groups'" not in __checkmk_var_result_ineffective.msg

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Bulk modify part of service groups (also checks for idempotency!)."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_modify }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Bulk delete service groups."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_delete }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Bulk delete service groups checking for idempotency)."
  service_group:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_create }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Run Module using Environment Variables."
  service_group:
    customer: "{{ (checkmk_var_customer != None) | ternary(checkmk_var_customer, omit) }}"  # See PR #427
    groups: "{{ checkmk_var_service_groups_create }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  environment: "{{ __checkmk_var_testing_environment }}"
