---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Set customer when needed."
  ansible.builtin.set_fact:
    customer: "provider"
  when: (outer_item.edition == "cme") or (outer_item.edition == "cce")

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Unset customer when needed."
  ansible.builtin.set_fact:
    customer: null
  when: not ((outer_item.edition == "cme") or (outer_item.edition == "cce"))

- name: "Create remote sites."
  ansible.builtin.command: "omd -V {{ outer_item.version }}.{{ outer_item.edition }} create
      --no-tmpfs --admin-password {{ checkmk_var_automation_secret }} {{ outer_item.remote.site_id }}"
  args:
    creates: "/omd/sites/{{ outer_item.remote.site_id }}"
  when: (download_pass is defined and download_pass | length) or outer_item.edition == "cre"

- name: "Start Apache2."
  ansible.builtin.service:
    name: apache2
    state: started

- name: "Start Sites."
  ansible.builtin.shell: "omd status -b {{ outer_item.remote.site_id }} || omd start {{
      outer_item.remote.site_id }}"
  register: site_status
  changed_when: site_status.rc == "0"
  when: (download_pass is defined and download_pass | length) or outer_item.edition == "cre"

- name: "Wait for site to be ready."
  ansible.builtin.pause:
    seconds: 5
  when: |
    ((download_pass is defined and download_pass | length) or outer_item.edition == 'cre')
    and (outer_item.stdout_lines is defined and 'OVERALL 1' in outer_item.stdout_lines)

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create site connection."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      site_config: "{{ outer_item.remote.site_config }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create site connection. 2nd."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      site_config: "{{ outer_item.remote.site_config }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: result
  failed_when: result.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Log in to remote site."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      login_data: "{{ outer_item.remote.login_data }}"
    state: "login"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Log in to remote site. 2nd."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      login_data: "{{ outer_item.remote.login_data }}"
    state: "login"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: result
  failed_when: result.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update remote site."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      site_config:
          basic_settings:
              alias: "{{ outer_item.remote.site_id }} with new alias"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Update remote site. 2nd"
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    site_connection:
      site_config:
          basic_settings:
              alias: "{{ outer_item.remote.site_id }} with new alias"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: result
  failed_when: result.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Log out from remote site."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    state: "logout"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Log out from remote site. 2nd."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    state: "logout"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: result
  failed_when: result.changed | bool

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete remote site."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete remote site. 2nd."
  distmon:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    site_id: "{{ outer_item.remote.site_id }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  register: result
  failed_when: result.changed | bool
