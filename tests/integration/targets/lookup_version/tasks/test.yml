---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Set customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: "provider"
  when: outer_item.edition == "cme"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Unset customer when needed."
  ansible.builtin.set_fact:
    checkmk_var_customer: null
  when: outer_item.edition != "cme"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Get Checkmk version."
  ansible.builtin.debug:
    msg: "Version is {{ __checkmk_var_result_internal }}"
  vars:
    __checkmk_var_result_internal: "{{ lookup('checkmk.general.version',
                    server_url=checkmk_var_server_url,
                    site=outer_item.site,
                    validate_certs=False,
                    automation_user=checkmk_var_automation_user,
                    automation_secret=checkmk_var_automation_secret)
              }}"
  delegate_to: localhost
  register: __checkmk_var_result_version

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Verify Checkmk version."
  ansible.builtin.assert:
    that: "outer_item.version in __checkmk_var_result_version.msg"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Use variables outside the module call."
  ansible.builtin.assert:
    that: "outer_item.version in __checkmk_var_result_module.msg"
  vars:
    __checkmk_var_result_module: "{{ lookup('checkmk.general.version') }}"
  delegate_to: localhost
  # register: __checkmk_var_result_module
  when: outer_item.edition == "stable_cme"
