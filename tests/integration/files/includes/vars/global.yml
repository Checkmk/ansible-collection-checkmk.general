---
# Configure location and credentials for the Checkmk REST API
checkmk_var_server_url: "http://127.0.0.1:{{ outer_item.port | default('80') }}/"
checkmk_var_automation_user: "cmkadmin"
checkmk_var_automation_secret: "Sup3rSec4et!"

# Generate download URL and provide credentials to download Checkmk setups
checkmk_var_download_url: "https://download.checkmk.com/checkmk/{{ item.version }}/check-mk-{{ __checkmk_server_edition_mapping[item.edition] }}-{{ item.version }}_0.{{ ansible_distribution_release }}_amd64.deb"  # noqa yaml[line-length]
checkmk_var_download_user: "d-gh-ansible-dl"
checkmk_var_download_pass: "{{ lookup('ansible.builtin.file', '/root/ansible_collections/checkmk/general/tests/integration/files/.dl-secret', errors='ignore') | default(omit) }}"  # noqa yaml[line-length]

# Due to inconsistent naming of editions, we normalize them here for convenience
__checkmk_server_edition_mapping:
  cre: raw
  cee: enterprise
  cce: cloud
  cme: managed


# This is a very hacky workaround, as it is not possible to assign variables
# to other variables when using them in lookup modules.
# checkmk_var_server_url: "http://127.0.0.1:5324/"  # see above
# The variable below is especially hacky.
# All integration tests were adapted to run the specific task only on this site.
checkmk_var_site: "stable_cme"
# checkmk_var_automation_user: "cmkadmin"  # noqa var-naming[pattern]
# checkmk_var_automation_secret: "Sup3rSec4et!"  # noqa var-naming[pattern]
checkmk_var_validate_certs: false

__checkmk_var_testing_environment:
  CHECKMK_VAR_SERVER_URL: "{{ checkmk_var_server_url }}"
  CHECKMK_VAR_SITE: "{{ outer_item.site }}"
  CHECKMK_VAR_VALIDATE_CERTS: "false"
  CHECKMK_VAR_AUTOMATION_USER: "{{ checkmk_var_automation_user }}"
  CHECKMK_VAR_AUTOMATION_SECRET: "{{ checkmk_var_automation_secret }}"

# Use this to override the test-specific sites for local testing:
# checkmk_var_test_sites:
#   - version: "2.4.0p3"
#     edition: "cme"
#     site: "stable_cme"
#     port: "5324"
